# Число 89 является первым целым числом с более чем одной цифрой, которое
#  соответствует свойству, частично введенному в названии этого ката. 
# Какой смысл говорить "Эврика"? Потому что эта сумма дает одинаковое число.

# В действительности: 89 = 8 ^ 1 + 9 ^ 2

# Следующим номером, имеющим это свойство, является 135.

# Посмотреть это свойство снова: 135 = 1 ^ 1 + 3 ^ 2 + 5 ^ 3

# Нам нужна функция для сбора этих чисел, которая может получить два целых числа a, b, которые определяют диапазон [a, b] (включительно) и выводят список отсортированных чисел в диапазоне, который удовлетворяет описанному выше свойству.

# Давайте посмотрим на некоторые случаи:

# sum_dig_pow (1, 10) == [1, 2, 3, 4, 5, 6, 7, 8, 9]

# sum_dig_pow (1, 100) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 89]
# Если в диапазоне [a, b] таких чисел нет, функция должна вывести пустой список.

# sum_dig_pow (90, 100) == []
# Наслаждайся этим!!
def sum_dig_pow(a=87, b=90): # range(a, b + 1) will be studied by the function
    answer = list()
    for i in range(a,b+1):
        if i>=1 and i<10:
            answer.append(i)
        else:
            num = 0
            divnum = divv(i)
            for z in range(0,len(divnum)):
                num+=divnum[z]**(z+1)
            if i == num:
                answer.append(i)
    return answer
def divv(a = 123):
    answer = list()
    while a>=10:
        answer.append(a%10)
        a = a//10
    else:
        answer.append(a)
    return answer[::-1]
print(sum_dig_pow(9, 11))